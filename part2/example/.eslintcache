[{"C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\index.js":"1","C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\components\\Note.js":"2","C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\App.js":"3","C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\services\\notes.js":"4","C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\components\\Notification.js":"5"},{"size":163,"mtime":1609416644540,"results":"6","hashOfConfig":"7"},{"size":316,"mtime":1609417480237,"results":"8","hashOfConfig":"7"},{"size":2848,"mtime":1609684531846,"results":"9","hashOfConfig":"7"},{"size":506,"mtime":1609685627026,"results":"10","hashOfConfig":"7"},{"size":223,"mtime":1609416860867,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1gh71yo",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\index.js",["27"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))",["28","29"],"C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\components\\Note.js",[],["30","31"],"C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\App.js",["32","33"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const hook = () => {\r\n    console.log('effect')\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const url = `http://localhost:3001/notes/${id}`\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n      //id: notes.length + 1,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  \r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\services\\notes.js",["34"],"import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update } ","C:\\Users\\Firo\\Documents\\GitHub\\Fullstack-HelsinkiCourse\\part2\\example\\src\\components\\Notification.js",[],{"ruleId":"35","severity":1,"message":"36","line":6,"column":7,"nodeType":"37","messageId":"38","endLine":6,"endColumn":12},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"39","replacedBy":"43"},{"ruleId":"41","replacedBy":"44"},{"ruleId":"35","severity":1,"message":"45","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":13},{"ruleId":"35","severity":1,"message":"46","line":40,"column":11,"nodeType":"37","messageId":"38","endLine":40,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":19,"column":1,"nodeType":"49","endLine":19,"endColumn":42},"no-unused-vars","'notes' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["50"],"no-negated-in-lhs",["51"],["50"],["51"],"'axios' is defined but never used.","'url' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]